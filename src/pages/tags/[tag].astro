---
import Layout from "../../layouts/Layout.astro";

const {     tag    } = Astro.params;
const {    posts   } = Astro.props;
const postsTotal = posts.length;
// console.log(filteredPosts);

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}
---

<Layout pageTitle={`/tags/${tag}/`}>
  <p>
    <a href="/tags/">tags/</a><br>
    â””{tag}/&ensp;&lt;
  </p>
  <h1>Index of /tags/{tag}</h1>
  <div class="postsList">
    <span class="total">Total: {postsTotal}</span>
    <table>
      <thead>
        <tr>
          <td class="title">Title</td>
          <td>Description</td>
          <td class="date">Date</td>
        </tr>
      </thead>
      <tbody>
        {posts.toSorted((a,b) => new Date(b.frontmatter.createdDate).getTime() - new Date(a.frontmatter.createdDate).getTime()).map((post) =>
          <tr>
            <td class="title"><a href={post.url}>{post.frontmatter.title}</a></td>
            <td>{post.frontmatter.description}</td>
            <td class="date">{new Date(post.frontmatter.createdDate).toLocaleDateString("ja-JP", {timeZone: "Asia/Tokyo", year: "numeric", month: "2-digit", day: "2-digit"}).replaceAll('/', '-')}</td>
          </tr>
        )}
      </tbody>
    </table>
  </div>
</Layout>
